name: FiveM FXAP Scanner Build

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version:    ${{ steps.extract_version.outputs.version }}
    steps:
      - name: Checkout completo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Extrair versÃ£o
        id: extract_version
        run: |
          version=$(jq -r .version package.json)
          echo "version=$version" >> $GITHUB_ENV
          echo "::set-output name=version::$version"

      - name: Configurar Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Criar e push da tag
        run: |
          git tag "${{ steps.extract_version.outputs.version }}"
          git push origin "${{ steps.extract_version.outputs.version }}"

      - name: Criar GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name:     ${{ steps.extract_version.outputs.version }}
          release_name: "FiveM FXAP Scanner v${{ steps.extract_version.outputs.version }}"
          draft:        false
          prerelease:   ${{ contains(steps.extract_version.outputs.version, 'alpha') || contains(steps.extract_version.outputs.version, 'beta') }}

  build-and-upload:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build App (gera `release/`)
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npm run dist

      - name: List release artifacts
        run: ls -Rlh release/

      - name: Upload all release assets
        uses: softprops/action-gh-release@v1
        with:
          files: release/**/* 
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
